import{bS as t,L as e,t as a,u as n,dh as i,di as r,dj as s,dk as o,dl as l,dm as d,G as p,bs as m,bv as u,bx as f,bJ as S,T as c,d as g,a3 as h,a as b,aj as P,aV as T,ag as v,F as y,ak as E}from"./detailed_results-71928620.chunk.js";import{B as k,j as B,a as O,I as A,o as D,T as H,V as I,W as C,X as R,Z as w,t as M}from"./individual_sim_ui-acc75452.chunk.js";const F={name:"Balanced",data:t.create({talentsString:"005510153330330220102013-3050505100023101-002",glyphs:e.create({major1:a.GlyphOfDisease,major2:a.GlyphOfVampiricBlood,major3:a.GlyphOfDarkCommand,minor1:n.GlyphOfHornOfWinter,minor2:n.GlyphOfBloodTap,minor3:n.GlyphOfRaiseDead})})},x=i.create({opener:r.Threat,optimizationSetting:s.Hps,bloodSpell:o.BloodStrike,presence:l.Frost}),z=d.create({startingRunicPower:0}),j=p.create({flask:m.FlaskOfStoneblood,food:u.FoodDragonfinFilet,defaultPotion:f.IndestructiblePotion,prepopPotion:f.IndestructiblePotion}),G={name:"P1 BiS Blood",tooltip:k,gear:S.fromJsonString('{ "items": [\n\t\t{\n\t\t\t"id": 40565,\n\t\t\t"enchant": 3878,\n\t\t\t"gems": [\n\t\t\t\t41380,\n\t\t\t\t36767\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40387\n\t\t},\n\t\t{\n\t\t\t"id": 39704,\n\t\t\t"enchant": 3852,\n\t\t\t"gems": [\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40252,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 40559,\n\t\t\t"gems": [\n\t\t\t\t40008,\n\t\t\t\t40022\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40306,\n\t\t\t"enchant": 3850,\n\t\t\t"gems": [\n\t\t\t\t40008,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40563,\n\t\t\t"enchant": 3860,\n\t\t\t"gems": [\n\t\t\t\t40008,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39759,\n\t\t\t"gems": [\n\t\t\t\t40008,\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40567,\n\t\t\t"enchant": 3822,\n\t\t\t"gems": [\n\t\t\t\t40008,\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40297,\n\t\t\t"enchant": 3232\n\t\t},\n\t\t{\n\t\t\t"id": 40718\n\t\t},\n\t\t{\n\t\t\t"id": 40107\n\t\t},\n\t\t{\n\t\t\t"id": 44063,\n\t\t\t"gems": [\n\t\t\t\t36767,\n\t\t\t\t36767\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42341,\n\t\t\t"gems": [\n\t\t\t\t40008,\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40406,\n\t\t\t"enchant": 3847\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 40207\n\t\t}\n  ]}')},N=B({fieldName:"startingRunicPower",label:"Starting Runic Power",labelTooltip:"Initial RP at the start of each iteration."}),W={inputs:[O({fieldName:"presence",label:"Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:l.Blood},{name:"Frost",value:l.Frost},{name:"Unholy",value:l.Unholy}],changeEmitter:t=>c.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),O({fieldName:"opener",label:"Opener",labelTooltip:"<p>Chose what opener to perform:</p>\t\t\t\t<p><b>Regular</b>: Regular opener.</p>\t\t\t\t<p><b>Threat</b>: Full IT spam for max threat.</p>",values:[{name:"Regular",value:r.Regular},{name:"Threat",value:r.Threat}],changeEmitter:t=>c.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),O({fieldName:"optimizationSetting",label:"Optimization Setting",labelTooltip:"<p>Chose what metric to optimize :</p>\t\t\t\t<p><b>Hps</b>: Prioritizes holding runes for healing after damage taken.</p>\t\t\t\t<p><b>Tps</b>: Prioritizes spending runes for icy touch spam.</p>\t\t\t\t<p><b>Dps</b>: Prioritizes spending runes for maximizing damage.</p>",values:[{name:"Hps",value:s.Hps},{name:"Tps",value:s.Tps},{name:"Dps",value:s.Dps}],changeEmitter:t=>c.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),O({fieldName:"bloodSpell",label:"Blood Spell",labelTooltip:"<p>Chose what blood rune spender to use.</p>",values:[{name:"Blood Strike",value:o.BloodStrike},{name:"Blood Boil",value:o.BloodBoil},{name:"Heart Strike",value:o.HeartStrike}],changeEmitter:t=>c.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])})]};class V extends A{constructor(t,e){super(t,e,{cssClass:"tank-deathknight-sim-ui",cssScheme:"death-knight",knownIssues:["<p>Completely unfinished.</p>"],epStats:[g.StatStamina,g.StatStrength,g.StatAgility,g.StatAttackPower,g.StatExpertise,g.StatMeleeHit,g.StatMeleeCrit,g.StatMeleeHaste,g.StatArmor,g.StatArmorPenetration,g.StatDefense,g.StatDodge,g.StatParry,g.StatResilience,g.StatSpellHit],epPseudoStats:[h.PseudoStatMainHandDps,h.PseudoStatOffHandDps],epReferenceStat:g.StatAttackPower,displayStats:[g.StatHealth,g.StatArmor,g.StatStamina,g.StatStrength,g.StatAgility,g.StatAttackPower,g.StatExpertise,g.StatMeleeHit,g.StatSpellHit,g.StatMeleeCrit,g.StatMeleeHaste,g.StatArmorPenetration,g.StatDefense,g.StatDodge,g.StatParry,g.StatResilience],defaults:{gear:G.gear,epWeights:b.fromMap({[g.StatArmor]:.05,[g.StatStamina]:1,[g.StatStrength]:.33,[g.StatAgility]:.6,[g.StatAttackPower]:.06,[g.StatExpertise]:.67,[g.StatMeleeHit]:.67,[g.StatMeleeCrit]:.28,[g.StatMeleeHaste]:.21,[g.StatArmorPenetration]:.19,[g.StatBlock]:.35,[g.StatBlockValue]:.59,[g.StatDodge]:.7,[g.StatParry]:.58,[g.StatDefense]:.8},{[h.PseudoStatMainHandDps]:3.1,[h.PseudoStatOffHandDps]:0}),consumes:j,rotation:x,talents:F.data,specOptions:z,raidBuffs:P.create({retributionAura:!0,powerWordFortitude:T.TristateEffectImproved,giftOfTheWild:T.TristateEffectImproved,swiftRetribution:!0,strengthOfEarthTotem:T.TristateEffectImproved,icyTalons:!0,abominationsMight:!0,leaderOfThePack:T.TristateEffectRegular,sanctifiedRetribution:!0,bloodlust:!0,devotionAura:T.TristateEffectImproved,stoneskinTotem:T.TristateEffectImproved}),partyBuffs:v.create({}),individualBuffs:y.create({blessingOfKings:!0,blessingOfMight:T.TristateEffectImproved,blessingOfSanctuary:!0}),debuffs:E.create({bloodFrenzy:!0,faerieFire:T.TristateEffectRegular,sunderArmor:!0,misery:!0,ebonPlaguebringer:!0,mangle:!0,heartOfTheCrusader:!0,demoralizingShout:T.TristateEffectImproved,frostFever:T.TristateEffectImproved,insectSwarm:!0,judgementOfLight:!0})},playerIconInputs:[],rotationInputs:W,includeBuffDebuffInputs:[D],excludeBuffDebuffInputs:[],otherInputs:{inputs:[H,I,C,R,w,M,N]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[F],gear:[G]}})}}export{F as B,x as D,G as P,V as T,z as a,j as b};
//# sourceMappingURL=sim-89085cec.chunk.js.map
