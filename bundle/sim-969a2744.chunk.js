import{bS as t,L as n,k as e,l as a,dG as i,dH as s,am as r,al as l,G as o,bs as d,bv as f,bx as m,aj as p,aV as c,F as S,ak as u,bJ as h,A as g,d as w,a as I,ag as b}from"./detailed_results-71928620.chunk.js";import{B as P,m as T,b as D,c as O,I as v,v as y,T as F}from"./individual_sim_ui-acc75452.chunk.js";const H={name:"Standard",data:t.create({talentsString:"05332031013005023310001-005551002020152-00502",glyphs:n.create({major1:e.GlyphOfSmite,major2:e.GlyphOfShadowWordPain,major3:e.GlyphOfShadowWordDeath,minor1:a.GlyphOfFortitude,minor2:a.GlyphOfShadowfiend,minor3:a.GlyphOfFading})})},M=i.create({useDevouringPlague:!0,useShadowWordDeath:!1,useMindBlast:!1}),W=s.create({useInnerFire:!0,useShadowfiend:!0,powerInfusionTarget:r.create({targetIndex:l})}),B=o.create({flask:d.FlaskOfTheFrostWyrm,food:f.FoodFishFeast,defaultPotion:m.RunicManaInjector,prepopPotion:m.PotionOfWildMagic}),C=p.create({giftOfTheWild:c.TristateEffectImproved,arcaneBrilliance:!0,divineSpirit:!0,totemOfWrath:!0,moonkinAura:c.TristateEffectImproved,wrathOfAirTotem:!0,sanctifiedRetribution:!0,bloodlust:!0}),j=S.create({blessingOfKings:!0,blessingOfWisdom:c.TristateEffectImproved,blessingOfMight:c.TristateEffectImproved,vampiricTouch:!0}),k=u.create({faerieFire:c.TristateEffectImproved,ebonPlaguebringer:!0,heartOfTheCrusader:!0,judgementOfWisdom:!0}),x={name:"Preraid Preset",tooltip:P,gear:h.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 42553,\n\t\t\t"enchant": 3820,\n\t\t\t"gems": [\n\t\t\t\t41333,\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40680\n\t\t},\n\t\t{\n\t\t\t"id": 34210,\n\t\t\t"enchant": 3810,\n\t\t\t"gems": [\n\t\t\t\t42144,\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 41610,\n\t\t\t"enchant": 3859\n\t\t},\n\t\t{\n\t\t\t"id": 43792,\n\t\t\t"enchant": 1144,\n\t\t\t"gems": [\n\t\t\t\t42144,\n\t\t\t\t40049\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37361,\n\t\t\t"enchant": 2332,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39285,\n\t\t\t"enchant": 3246,\n\t\t\t"gems": [\n\t\t\t\t40014,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40696,\n\t\t\t"gems": [\n\t\t\t\t40049,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37854,\n\t\t\t"enchant": 3719\n\t\t},\n\t\t{\n\t\t\t"id": 44202,\n\t\t\t"enchant": 3826,\n\t\t\t"gems": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 43253,\n\t\t\t"gems": [\n\t\t\t\t42144\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39250\n\t\t},\n\t\t{\n\t\t\t"id": 37835\n\t\t},\n\t\t{\n\t\t\t"id": 37873\n\t\t},\n\t\t{\n\t\t\t"id": 41384,\n\t\t\t"enchant": 3834\n\t\t},\n\t\t{\n\t\t\t"id": 40698\n\t\t},\n\t\t{\n\t\t\t"id": 37177\n\t\t}\n\t]}')},G={name:"P1 Preset",tooltip:P,gear:h.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 40562,\n\t\t\t"enchant": 3820,\n\t\t\t"gems": [\n\t\t\t\t41333,\n\t\t\t\t42144\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44661,\n\t\t\t"gems": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40459,\n\t\t\t"enchant": 3810,\n\t\t\t"gems": [\n\t\t\t\t42144\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44005,\n\t\t\t"enchant": 3859,\n\t\t\t"gems": [\n\t\t\t\t42144\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40234,\n\t\t\t"enchant": 1144,\n\t\t\t"gems": [\n\t\t\t\t39998,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44008,\n\t\t\t"enchant": 2332,\n\t\t\t"gems": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40454,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t40049,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40561,\n\t\t\t"enchant": 3601,\n\t\t\t"gems": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40560,\n\t\t\t"enchant": 3719\n\t\t},\n\t\t{\n\t\t\t"id": 40558,\n\t\t\t"enchant": 3826\n\t\t},\n\t\t{\n\t\t\t"id": 40719\n\t\t},\n\t\t{\n\t\t\t"id": 40399\n\t\t},\n\t\t{\n\t\t\t"id": 40255\n\t\t},\n\t\t{\n\t\t\t"id": 40432\n\t\t},\n\t\t{\n\t\t\t"id": 40395,\n\t\t\t"enchant": 3834\n\t\t},\n\t\t{\n\t\t\t"id": 40273\n\t\t},\n\t\t{\n\t\t\t"id": 39712\n\t\t}\n\t]}')},N=T({fieldName:"powerInfusionTarget",id:g.fromSpellId(10060),extraCssClasses:["within-raid-sim-hide"],getValue:t=>t.getSpecOptions().powerInfusionTarget?.targetIndex!=l,setValue:(t,n,e)=>{const a=n.getSpecOptions();a.powerInfusionTarget=r.create({targetIndex:e?0:l}),n.setSpecOptions(t,a)}}),E=T({fieldName:"useInnerFire",id:g.fromSpellId(48168)}),U=T({fieldName:"useShadowfiend",id:g.fromSpellId(34433)}),A={inputs:[D({fieldName:"useDevouringPlague",label:"Use Devouring Plague",labelTooltip:"Use Devouring Plague whenever its not active."}),D({fieldName:"useShadowWordDeath",label:"Use Shadow Word: Death",labelTooltip:"Use Shadow Word: Death whenever off CD."}),D({fieldName:"useMindBlast",label:"Use Mind Blast",labelTooltip:"Use Mind Blast whenever off CD."}),D({fieldName:"memeDream",label:"Meme Dream",labelTooltip:"Assumes 2nd Smite Priest in raid, so just spams HF + Smite with permanent HF uptime."}),O({fieldName:"allowedHolyFireDelayMs",label:"Allowed Delay for HF",labelTooltip:"Time, in milliseconds, the player is allowed to wait for Holy Fire if it is about to come off CD."})]};class J extends v{constructor(t,n){super(t,n,{cssClass:"smite-priest-sim-ui",cssScheme:"priest",knownIssues:[],epStats:[w.StatIntellect,w.StatSpirit,w.StatSpellPower,w.StatSpellHit,w.StatSpellCrit,w.StatSpellHaste,w.StatMP5],epReferenceStat:w.StatSpellPower,displayStats:[w.StatHealth,w.StatStamina,w.StatIntellect,w.StatSpirit,w.StatSpellPower,w.StatSpellHit,w.StatSpellCrit,w.StatSpellHaste,w.StatMP5],modifyDisplayStats:t=>{let n=new I;return n=n.addStat(w.StatSpellHit,1*t.getTalents().shadowFocus*y),{talents:n}},defaults:{gear:G.gear,epWeights:I.fromMap({[w.StatIntellect]:.38,[w.StatSpirit]:.38,[w.StatSpellPower]:1,[w.StatSpellHit]:1.65,[w.StatSpellCrit]:.32,[w.StatSpellHaste]:.78,[w.StatMP5]:.35}),consumes:B,rotation:M,talents:H.data,specOptions:W,raidBuffs:C,partyBuffs:b.create({}),individualBuffs:j,debuffs:k},playerIconInputs:[N,E,U],rotationInputs:A,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[F]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[H],gear:[x,G]}})}}export{M as D,G as P,J as S,H as a,W as b,B as c};
//# sourceMappingURL=sim-969a2744.chunk.js.map
